<!DOCTYPE html><html><head><title>DockYard</title><link href="/stylesheets/all-509d6afb.css" media="screen" rel="stylesheet" type="text/css" /><script src="/javascripts/all-c96a81f7.js" type="text/javascript"></script><meta content='NO-CACHE' http-equiv='CACHE-CONTROL'><meta content='DockYard is a Ruby on Rails, PostgreSQL, and, Ember.js, web / mobile application development software consultancy based in Boston, MA.' namer='description'><meta content='ruby on rails, rails, ruby, ruby on rails training, ruby application development, ruby on rails application development, ember application development, ember.js application development, software application development, web, web application development, mobile, mobile application development, ios, ios application development, iphone, iphone application development, android, android application development, postgres, startups, enterprise, Boston, MA, Massachusetts, for hire' name='keywords'><meta content='web development, mobile development, startups, enterprise, ruby on rails, rails, ruby, ruby on rails training, Boston, for hire' name='keywords'><meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0' name='viewport'><meta charset='utf-8'><meta content='DockYard.com - ' name='description'><link href='//cloud.typography.com/6496052/702882/css/fonts.css' rel='stylesheet' type='text/css'><link href='http://dockyard.com/humans.txt' rel='author'><link href='/favicon.png' rel='shortcut icon' type='image/x-icon'><link href='/favicon.png' rel='icon' type='image/x-icon'><link href='/apple-touch-icon.png' rel='apple-touch-icon'><link href='/apple-touch-icon-precomposed.png' rel='apple-touch-icon-precomposed'><script>
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-24185112-2']);
    _gaq.push(['_trackPageview']);
  
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>
<!--
                                             ..
                                           .O.
                                       .:OO.
                                      :OOO.
                                    :OOO:.
                         ...      :OOOO:
                   ..ZOOOOOOOOO..OZ.O.
                   OOOOOOOOOOOOOOOOI
                  OOOOOOOOOOOOOOOOI,
                 OOOOOOOO. .OOOOOOOO:
                 OOOOOOOO   OOOOOOOOO:
                OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO
                OOOOOO?:   .OOOOOOOOO
               .OOOOO      OOOOOOOOOO
,OO ZO~        OOOOO,     OOOOOOOOOO+
 OOOOO.        OOOOO     OOOOOOOOOOO+
  OOO?        OOOOO     .OOOOOOOOOOO:
   OOO,      OOOOO.    .OOOOOOOOOOOO
    OOOOOOOOOOOOO.    .OOOOOOOOOOOO.
     OOOOOOOOOOOO.  .OOOOOOOOOOOOO.
      8OOOOOOOOOOOOOOOOOOOOOOOODO:
         :OOOOOOOOOOOOOOOOOOOO::

--></head><body class='feed'><header><div class='extended-header-wrap has-border--bottom'><div class='l-wrap--wide'><nav class='extended-nav has-border--bottom'><a class='extended-nav--logo' data-icon='⌂' href='http://dockyard.com/'><span class='is-hidden'>Home</span></a><a class='extended-nav--close' data-icon='X'><span class='is-hidden'>Close</span></a><div class='extended-nav__items-wrap'><div class='extended-nav__items'><a class='extended-nav__item' href='http://dockyard.com/team'>Our Team</a><a class='extended-nav__item' href='http://dockyard.com/community'>Community</a><a class='extended-nav__item active' href='/'>Blog</a><a class='extended-nav__item' href='http://dockyard.com/hire-us'>Hire Us</a></div></div></nav><nav class='work-nav'><p>Selected Work</p><a class='work-nav-item' href='http://dockyard.com/work/credit-card-reviews'><h4 class='work-nav-item__title'>Credit Card Reviews</h4><p class='work-nav-item__desc'>Credit card advice from real people.</p></a><a class='work-nav-item' href='http://dockyard.com/work/coachup'><h4 class='work-nav-item__title'>CoachUp</h4><p class='work-nav-item__desc'>You should be training. Right now.</p></a><a class='work-nav-item' href='http://dockyard.com/work/askthem'><h4 class='work-nav-item__title'>AskThem</h4><p class='work-nav-item__desc'>Ask officials questions on city, state, and federal levels.</p></a><a class='work-nav-item' href='http://dockyard.com/work/beacon-hill-blitz'><h4 class='work-nav-item__title'>Beacon Hill Blitz</h4><p class='work-nav-item__desc'>How technology helped repeal the #TechTax.</p></a></nav></div></div><nav class='main-nav-wrap has-border--bottom'><div class='main-nav l-wrap--wide'><a class='logo' href='http://dockyard.com'>DockYard</a><a class='club-sandwich' data-icon='☰'><span class='is-hidden'>Navigation</span></a></div></nav></header><div class='push--header'></div><div class='l-wrap'><a class='logo--reefpoints' href='/'>ReefPoints</a><?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-12-19T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Simple Property Enum Cycling in Ember</title>
    <link rel="alternate" href="/2013/12/19/ember-enum-property-cycler.html"/>
    <id>/2013/12/19/ember-enum-property-cycler.html</id>
    <published>2013-12-19T00:00:00Z</published>
    <updated>2013-12-19T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This is a quick one. I needed to cycle between the values in a set.
Toggling between &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in Ember is easy enough with the
&lt;code&gt;toggleProperty&lt;/code&gt; function but I had several properties I wanted to cycle
between. So last night I wrote a simple function poorly named:
&lt;code&gt;cycleEnumProperty&lt;/code&gt;. You pass it the property you want to act upon and
the enum set to cycle. If the property is currently empty or if the
property matches the last value in the set the property will be set to
the first value, otherwise the property will be set to the next value.
Try it out:&lt;/p&gt;

&lt;p&gt;&lt;a class="jsbin-embed"
href="http://emberjs.jsbin.com/agaKuCoL/1/embed?js,output"&gt;Ember
Starter Kit&lt;/a&gt;&lt;script
src="http://static.jsbin.com/js/embed.js"&gt;&lt;/script&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Be A Blunt Axe</title>
    <link rel="alternate" href="/2013/12/18/be-a-blunt-axe.html"/>
    <id>/2013/12/18/be-a-blunt-axe.html</id>
    <published>2013-12-18T00:00:00Z</published>
    <updated>2013-12-18T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Be A Blunt Axe&lt;/h2&gt;

&lt;p&gt;Something that was taught to us early on in College was how to make a &amp;quot;compliment sandwich.&amp;quot; I’m sure many of you have heard this term before, but for those of you who haven’t, it&amp;#39;s a communication tool that can keep yourself humble when confronted with the daunting task of giving others critical feedback on their work. &lt;/p&gt;

&lt;p&gt;The idea is that you as the critic would point out a positive aspect about their work or concept, the top layer of bread if you will. Then you’d follow this by mentioning something they could improve upon, which is the meaty and true substance of the discussion. At the end you’d conclude by providing another positive aspect, a la the last bit of bread. The reason we had to come up with this step-by-step process when approaching a critique environment was to avoid hurting anyone’s feelings. Rather than declaring an idea as stupid or bad, which honestly helps to accomplish nothing aside from increase the size of a critic’s ego, we had now formulated a way of give important and in-depth feedback that would actually help to improve an idea by simply being kind and genuinely interested in helping. Keeping to this method, people were much more adept to make the suggested improvements rather than declare themselves a failure, giving up before they’ve even begun to start. &lt;/p&gt;

&lt;p&gt;It&amp;#39;s important to remember that your feedback can and should be honest and frequent, but kindness prevails over being an asshole (every time). By being empathetic to the person receiving the critique, you get a better sense of what&amp;#39;ll help them improve, rather than just tearing them down. With this, your critiques become genuine and no longer appear as a means to stroke an inflated ego. Without this, the whole world would be filled with broken hearts and ego-powered douche-bags. As they say, &amp;quot;an eye for an eye makes the whole world blind&amp;quot;. Let&amp;#39;s keep our eyes and hearts intact.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introducing easydir.vim</title>
    <link rel="alternate" href="/2013/12/08/introducing-easydir-vim.html"/>
    <id>/2013/12/08/introducing-easydir-vim.html</id>
    <published>2013-12-08T00:00:00Z</published>
    <updated>2013-12-08T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;One of the things that I wish Vim had by default is the ability to create
directories and files at the same time. Last month at our local
&lt;a href="http://openhack.github.io/"&gt;OpenHack meetup&lt;/a&gt;, I had a conversation about
it with a fellow developer and we both concluded that it wouldn&amp;#39;t be too
difficult to write something up.&lt;/p&gt;

&lt;p&gt;Well, I&amp;#39;m happy to introduce &lt;a href="https://github.com/dockyard/vim-easydir"&gt;easydir.vim&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;It adds to the functionality of &lt;code&gt;:new&lt;/code&gt;, &lt;code&gt;:edit&lt;/code&gt;, &lt;code&gt;:write&lt;/code&gt;, and more.&lt;/p&gt;

&lt;p&gt;Here are some quick examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Edit a new file inside of a previously nonexistent directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:e new_directory/new_file.txt

# Write some things to &amp;quot;new_file.txt&amp;quot; and save it.

:w

# The directory &amp;quot;new_directory/&amp;quot; and the file &amp;quot;new_file.txt&amp;quot;
# are saved!
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Open the new directory and file into a split window.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:sp another_directory/another_file.txt

# Write to &amp;quot;another_file.txt&amp;quot; and save the file.

:w

# another_directory/another_file.txt is saved!
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Super nested directories&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:n thank/you/sir/may/i/have/another.txt

# Write some things to &amp;quot;another.txt&amp;quot; and save it.

:w
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The directories and files will be saved under your current project&amp;#39;s directory.&lt;/p&gt;

&lt;p&gt;Thanks for checking it out and enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Never Stop Exploring</title>
    <link rel="alternate" href="/2013/12/06/always-be-exploring.html"/>
    <id>/2013/12/06/always-be-exploring.html</id>
    <published>2013-12-06T00:00:00Z</published>
    <updated>2013-12-06T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Never Stop Exploring&lt;/h2&gt;

&lt;p&gt;Over the years, many artists seem to have fallen into a creative rut within their chosen career path. Some may have found a comfortable day job that sufficiently pays the bills. Others simply retired early, claiming to have burnt out creatively, and chose to throw in the artistic towel for a simpler lifestyle, one far less plagued by self doubt and critical objections, I’m sure. Whatever the reason is, we as a society are more often selecting to pursue comfort over curiosity and I believe it’s hurting the progression of our personal artistic expression in both our culture and as individuals.&lt;/p&gt;

&lt;p&gt;By choosing to accept what’s handed to you by media, you’re merely absorbing other’s ideas or predefined popular interests that have become media friendly rather than participating as part of the cultural influence. This accounts for many of the current trends that appear in graphic design, illustration, web design, music, and movies these days. How else would you have ended up with Independence Day, Mars Attacks, and Men in Black hitting the top box office charts all within the same year? You couldn’t. Aliens and end of the world scenarios were accepted as hot topics at the time, but are any of them truly remembered as works of art? I would argue the answer to be, “No”. What makes something a genuine work of art is the passion with which it is made. A fresh and deeply personal idea that attempts to either break the rules of the medium or painstakingly craft them to best suit your particular need. &lt;/p&gt;

&lt;p&gt;For example, as soon as iOS7 was shown to the public, a majority of the design community’s reaction was negative. But as soon as this same operating system was made public and write-ups began appearing online from major figureheads in the industry, people’s views started to change, as did their designs. The same people who appeared to be so opposed to this recent announcement were beginning to cater their latest designs to having an extremely minimal feel, embracing extra thin typefaces and overly saturated primary colors. While I for one have definitely come to appreciate specific things about the iOS7 operating system, there are definitely things about it’s design that are not necessarily applicable to other interface scenarios. In short, just because a big company is successful with their design doesn’t mean it’s the right fit for your project. No one’s remembered for who they’ve copied. They’re remembered for what innovations they’ve made or new ideas they’ve brought to the table. &lt;/p&gt;

&lt;p&gt;Whether this trend is a culturally specific problem or something that has plagued mankind for years, I’m unsure. What I am sure of though is that I for one don’t ever want to find myself in this predetermined rut. I think everyone has great ideas, and it’s important for them to take the time to properly express them. It’s a matter of finding the motivation in yourself to make it happen and take the risk of making it public. As the great Bill Nye said, “Everyone you will ever meet knows something you don&amp;#39;t”.&lt;/p&gt;

&lt;p&gt;I for one keep a persistent list of ideas that I want to explore, both in a physical journal and on &lt;a href="https://www.wunderlist.com/en/"&gt;Wunderlist&lt;/a&gt;, just so that no matter how random the idea may seem, I can at the very least document it to be reviewed at a later date. When I do have down time between projects, I never have to search too hard for a new one to get started. For instance, my current side project is to keep an ongoing list of fictional band names that my friends and I have collected over the years and make actual merchandise out of them as if they were real bands. I treat these projects like tiny experiments and allow myself to try new things, technically and mentally. That way, when I do return to my other projects, they never feel stale. I’m once again excited to work on them and have a new set of skills or ideas to help make them even better. &lt;/p&gt;

&lt;p&gt;This is why I think it’s important that no matter what you do, whether it’s a full time design job, freelance illustration, or something far removed from the art profession you had originally pursued, to always keep your mind fresh with new ideas. Explore all possibilities and try new things whenever you can. The more you create, the more apt you are to legitimately think outside the box, rather than work within it’s constraints. And that, my friends is how you will be remembered, for being true to yourself and creating genuine, passionate work.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Buffers, Windows, Tabs... Oh My! Part 2: Vim Windows</title>
    <link rel="alternate" href="/2013/11/27/vim-windows.html"/>
    <id>/2013/11/27/vim-windows.html</id>
    <published>2013-11-27T00:00:00Z</published>
    <updated>2013-11-27T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;In the second part of this series, we&amp;#39;ll be covering Vim windows. Windows are simply
the &lt;strong&gt;viewports&lt;/strong&gt; into &lt;a href="http://reefpoints.dockyard.com/2013/10/22/vim-buffers.html"&gt;buffers&lt;/a&gt;
and I&amp;#39;m 110% sure that they are a huge part of your daily workflow.&lt;/p&gt;

&lt;p&gt;Yes, there are numerous plugins that make our lives a lot easier, but let&amp;#39;s
dive into a powerful defaults that Vim offers us.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ll first cover the basics, and then learn some neat window management commands.&lt;/p&gt;

&lt;h2&gt;Starting a Vim Session&lt;/h2&gt;

&lt;h3&gt;One File&lt;/h3&gt;

&lt;p&gt;Vim windows are not complicated to use; if you want to open a file, &lt;code&gt;file_one.txt&lt;/code&gt;, simply:&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;$ vim file_one.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;Multiple Files&lt;/h3&gt;

&lt;p&gt;If you want to open multiple files, &lt;code&gt;file_one.txt&lt;/code&gt;, &lt;code&gt;file_two.txt&lt;/code&gt;, and &lt;code&gt;file_three.txt&lt;/code&gt;, you can
do the following:&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;$ vim file_one.txt file_two.txt file_three.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This opens the first file, &lt;code&gt;file_one.txt&lt;/code&gt;, into a window.
Files &lt;code&gt;file_two.txt&lt;/code&gt; and &lt;code&gt;file_three.txt&lt;/code&gt; are opened as inactive buffers.&lt;/p&gt;

&lt;h3&gt;Multiple Horizontal Splits&lt;/h3&gt;

&lt;p&gt;Say you want to view multiple files at once. Good news! You can
open all files and place them into &lt;strong&gt;horizontal splits&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;$ vim -o file_one.txt file_two.txt file_three.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;Multiple Vertical Splits&lt;/h3&gt;

&lt;p&gt;Don&amp;#39;t like horizontal splits? Better news! You can open them all as &lt;strong&gt;vertical splits&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;$ vim -O file_one.txt file_two.txt file_three.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Within a Vim Session&lt;/h2&gt;

&lt;p&gt;There are two main arrangements for splitting windows, vertical and horizontal. Let&amp;#39;s say
we&amp;#39;re editing a file and want to open up another file. We can do the following:&lt;/p&gt;

&lt;h3&gt;Horizontal Splits&lt;/h3&gt;

&lt;p&gt;This will open &lt;code&gt;another_file.txt&lt;/code&gt; as &lt;strong&gt;horizontal split&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:split another_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can use this abbreviation:&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:sp another_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In addition, you can specify how large the new split will be by passing
in a numerical value. This value will represent the line numbers shown within the
split.&lt;/p&gt;

&lt;p&gt;For example, this will reveal 25 lines of &lt;code&gt;another_file.txt&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:25sp another_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Lastly, you can open a &lt;strong&gt;split&lt;/strong&gt; window with &lt;code&gt;CTRL-W s&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;Vertical Splits&lt;/h3&gt;

&lt;p&gt;You can open files as &lt;strong&gt;vertical splits&lt;/strong&gt; as well.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:vsplit another_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Which is abbreviated as:&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:vsp another_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Vertical splits&lt;/strong&gt; can also take in a numerical value, which corresponds to the
character width of the column.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:30vsp another_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Finally, you can open a &lt;strong&gt;vertical split&lt;/strong&gt; with &lt;code&gt;CTRL-W v&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;New Files&lt;/h3&gt;

&lt;p&gt;Let&amp;#39;s create a new file.&lt;/p&gt;

&lt;p&gt;Use, &lt;code&gt;:new&lt;/code&gt; to create a new file inside the current window.
After you save the file, it will be created within your current directory.
You can also use the abbreviation &lt;code&gt;:n&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:n new_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we specify the path, we can also create files inside existing directories.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:n ../existing_dir/new_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;code&gt;:vnew&lt;/code&gt; or &lt;code&gt;:vne&lt;/code&gt; to create a new file inside a new &lt;strong&gt;vertical split&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;:vne new_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Lastly, we can use &lt;code&gt;CTRL-w n&lt;/code&gt; to create a new file inside a &lt;strong&gt;horizontal split&lt;/strong&gt;.
Note that we have not specified a file name. Upon saving the file with &lt;code&gt;:w&lt;/code&gt;, we
can give the file a name. Such that:&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;# CTRL-w n

:w this_is_a_new_file.txt
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;Switching Windows&lt;/h3&gt;

&lt;p&gt;Switching windows ain&amp;#39;t hard either!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CTRL-w h&lt;/code&gt; = Switch to the window to the left&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w j&lt;/code&gt; = Switch to the window below&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w k&lt;/code&gt; = Switch to the window above&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w l&lt;/code&gt; = Switch to the window to the right&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Moving Windows&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ve realized that window placement is incredibly useful
when pairing with another person. Here&amp;#39;s are a some ways to adjust
the windows.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CTRL-w T&lt;/code&gt; = Move current window to a new tab&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w r&lt;/code&gt; = &lt;em&gt;Rotates&lt;/em&gt; the windows from left to right - only if the windows
are split vertically&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w R&lt;/code&gt; = &lt;em&gt;Rotates&lt;/em&gt; the windows from right to left - only if the windows
are split vertically&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w H&lt;/code&gt; = Move current window the far left and use the full height of the screen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w J&lt;/code&gt; = Move current window the far bottom and use the full width of the screen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w K&lt;/code&gt; = Move current window the far top and full width of the screen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w L&lt;/code&gt; = Move current window the far right and full height of the screen&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Resizing Windows&lt;/h3&gt;

&lt;p&gt;Sometimes windows open up funny or are rendered incorrectly after separating from
an external monitor. Or maybe you want to make more room for an important file.&lt;/p&gt;

&lt;p&gt;We can easily solve those problems with the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CTRL-w =&lt;/code&gt; = Resize the windows &lt;em&gt;equally&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w &amp;gt;&lt;/code&gt; = Incrementally increase the window to the right

&lt;ul&gt;
&lt;li&gt;Takes a parameter, e.g. &lt;code&gt;CTRL-w 20 &amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w &amp;lt;&lt;/code&gt; = Incrementally increase the window to the left

&lt;ul&gt;
&lt;li&gt;Takes a parameter, e.g. &lt;code&gt;CTRL-w 20 &amp;lt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w -&lt;/code&gt; = Incrementally decrease the window&amp;#39;s height

&lt;ul&gt;
&lt;li&gt;Takes a parameter, e.g. &lt;code&gt;CTRL-w 10 -&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL-w +&lt;/code&gt; = Incrementally increase the window&amp;#39;s height

&lt;ul&gt;
&lt;li&gt;Takes a parameter, e.g. &lt;code&gt;CTRL-w 10 +&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Wrapping Up&lt;/h2&gt;

&lt;p&gt;That was a lot to cover, but I do believe incorporating these commands into
your workflow will prove pretty helpful. Thanks for reading!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Think</title>
    <link rel="alternate" href="/2013/11/15/think.html"/>
    <id>/2013/11/15/think.html</id>
    <published>2013-11-15T00:00:00Z</published>
    <updated>2013-11-15T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Ever since &lt;a href="http://wickedgoodruby.com/2013/speakers/matt_aimonetti"&gt;Matt Aimonetti&amp;#39;s talk at
Wicked Good Ruby&lt;/a&gt;
on there being such thing as bad code, I&amp;#39;ve felt I&amp;#39;ve
needed to write a blog post about the &lt;a href="https://en.wikipedia.org/wiki/Cargo_cult"&gt;cargo
culting&lt;/a&gt; that happens in
the development world.&lt;/p&gt;

&lt;h2&gt;Sandi Metz&amp;#39;s Rules&lt;/h2&gt;

&lt;p&gt;Back in January, &lt;a href="http://rubyrogues.com/087-rr-book-clubpractical-object-oriented-design-in-ruby-with-sandi-metz/"&gt;Sandi Metz was on Ruby
Rogues&lt;/a&gt;
to discuss her book, &lt;strong&gt;&lt;a href="http://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330/"&gt;Practical Object-Oriented Design in Ruby&lt;/a&gt;&lt;/strong&gt;.
Out of this conversation came &amp;quot;&lt;a href="https://gist.github.com/henrik/4509394"&gt;Sandi Metz&amp;#39;s
rules&lt;/a&gt;&amp;quot;. Many
in the Ruby community took these rules as gospel, without knowing the
context in which these rules were created.&lt;/p&gt;

&lt;p&gt;The rules, for those unfamilar:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Your class can be no longer than 100 lines of code&lt;/li&gt;
&lt;li&gt;Your methods can be no longer than five lines of code&lt;/li&gt;
&lt;li&gt;You can pass no more than four parameters and you can&amp;#39;t just make it one big hash&lt;/li&gt;
&lt;li&gt;When a call comes into your Rails controller, you can only instantiate one object to do whatever it is that needs to be done&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sandi joined Matt during his talk at Wicked Good Ruby and &lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=VO-NvnZfMA4#t=1380"&gt;gave some background to the
story of her rules&lt;/a&gt;.
To paraphase Sandi, at the time she was working with a group that had multi-thousand line controllers with
multi-hundred line methods. These controllers and methods represented
one end of a spectrum, which made code incredibly hard to read and maintain.
They were begging Sandi for guidelines with which they could try to
correct this problem. What she did was create a set of rules that
lived on the opposite side of the extreme, to force them to meet
somewhere in the middle.&lt;/p&gt;

&lt;p&gt;In reality, these rules are a different way of looking at rules many of
us strive for in the first place. An example: The 100 lines per class
rule is really forcing you to create classes with the &lt;a href="https://en.wikipedia.org/wiki/Single_responsibility_principle"&gt;Single
Responsibility Principle&lt;/a&gt; in mind.&lt;/p&gt;

&lt;p&gt;My issue is not with these rules as they exist, but with the
community&amp;#39;s cargo culting of these rules and treating them as The Four
Commandments. I don&amp;#39;t have an issue with you following them, as long as
you understand why they exist, and you feel as though they are
principles you believe in. Don&amp;#39;t just make five line methods because
Sandi said so, and if you follow these rules, you feel like you&amp;#39;ll be a
great developer. Adhering to Sandi&amp;#39;s rules does not make one great, it&amp;#39;s
understanding where these, or any rules, should and shouldn&amp;#39;t apply.
Sometimes a method that spans more than five lines will be more readable
and maintainable than the same method spread across five or six 5-line
methods. Striking that balance is where the power lies.&lt;/p&gt;

&lt;h2&gt;REMOTE&lt;/h2&gt;

&lt;p&gt;37signals just published
&lt;a href="http://www.amazon.com/Remote-Office-Required-Jason-Fried/dp/0804137501/"&gt;REMOTE&lt;/a&gt;, a book about
the benefits of allowing remote workers. I don&amp;#39;t disagree that
working remote has many benefits. At DockYard, we work from home from time
to time. We also strive to have people in the office more often than
not, not because Brian doesn&amp;#39;t think we aren&amp;#39;t working when we aren&amp;#39;t in
the office, but because it enables greater collaboration.&lt;/p&gt;

&lt;p&gt;DockYard is a consultancy; we have client work with deadlines we have to
meet. With having our developers and designers in the office together more
often than not, it removes the latency from discussing issues. I can
walk over to Steve and we can hash out an issue in a few minutes. If we
were all remote, I&amp;#39;d have to ping him on HipChat, hope he&amp;#39;s at his desk,
try to go over the issue text-only until we realize we need to have a
Google Hangout, etc. It makes more sense for us to be in the same place.&lt;/p&gt;

&lt;p&gt;The other benefit of DockYard working from the office is that our junior
developers enjoy the same face-to-face benefits. Also, body language
makes a huge difference when teaching or learning topic. When someone pauses,
has a slightly puzzled look on their face and says &amp;quot;....Ok&amp;quot;, it easy to
realize that a bit more background on the topic will really let them
grasp the topic, but an &amp;quot;ok&amp;quot; in HipChat removes all the body language we
could leverage.&lt;/p&gt;

&lt;p&gt;Removing the latency between a junior developer having a
question and getting the answer is crucial. If a junior developer has a
question that&amp;#39;s a show stopper, they can feel helpless while they wait
for someone to be around to answer that question. That helplessness is
killer; it makes someone feel like they aren&amp;#39;t helping, and can
potentially prevent them from asking other questions. If the that delay
is interpreted as the senior developer blowing them off, they will be
less inclined to ask questions in the future, hurting both themselves
and the team.&lt;/p&gt;

&lt;p&gt;A product company that employs experts (or creators) of a framework has
a much different situation, where working remote makes a lot more sense.
The conversations they have will be at a different level. They&amp;#39;ll all
have intimate knowledge of the code base, and so a few questions back
and forth or a quick Google Hangout achieves a great deal. The
conclusion was a result of the context they exist in. Remote workers
work great for them because they have the perfect mix of experts in
their domain; are working on products, which have very different
requirements and issues of client work; and have a customer support
group, which don&amp;#39;t necessarily need to collaborate while working a
customer through issues.&lt;/p&gt;

&lt;h2&gt;Figure Out What Works for YOU&lt;/h2&gt;

&lt;p&gt;In no way am I saying you should all work in the same office and
disregard Sandi&amp;#39;s rules. What I&amp;#39;m asking of the community is a bit of
critical thought. Just because someone smart said one thing, it doesn&amp;#39;t
mean it&amp;#39;s gospel. Realize that experience has led that person to that
conclusion, weigh your experience against it, and apply it if you can.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s just not hope that the gods give us food because we made bamboo
airplanes. Let&amp;#39;s realize that moving to XYZ comes with both drawbacks and
benefits, not just the benefits that everyone is touting.&lt;/p&gt;
</content>
  </entry>
</feed>
<h2 class='nothin'>Your search returned no results. Perhaps you should try again.</h2></div><div class='push--big'></div><footer><div class='l-wrap'><div class='footer-group'><h3 class='footer-group__title'>EVENTS</h3><nav><a class='footer__event' href='http://wickedgoodruby.com/' target='_blank'><div class='footer__event--wgr'></div><h4 class='footer-title'>Wicked Good Ruby Conf</h4></a><a class='footer__event' href='http://www.meetup.com/Boston-Ember-js/' target='_blank'><div class='footer__event--ember'></div><h4 class='footer-title'>Boston Ember.js Meetup</h4></a><a class='footer__event' href='http://www.meetup.com/uxboston/' target='_blank'><div class='footer__event--ux'></div><h4 class='footer-title'>UX Boston Meetup</h4></a><a class='footer__event' href='http://openhack.github.io/boston/' target='_blank'><div class='footer__event--openhack'></div><h4 class='footer-title'>OpenHack Boston</h4></a></nav></div><div class='footer-group'><a href='/'><h3 class='footer-group__title'>BLOG</h3></a><nav class='blog-nav--footer'><a class='blog-nav-item--footer' href='/2013/12/19/ember-enum-property-cycler.html'><h4 class='footer-title'>Simple Property Enum Cycling in Ember</h4><p class='footer-desc'>A quick demo of cycling between a set of values</p></a><a class='blog-nav-item--footer' href='/2013/12/18/be-a-blunt-axe.html'><h4 class='footer-title'>Be A Blunt Axe</h4><p class='footer-desc'>Giving good feedback without being too aggressive.</p></a><a class='blog-nav-item--footer' href='/2013/12/08/introducing-easydir-vim.html'><h4 class='footer-title'>Introducing easydir.vim</h4><p class='footer-desc'>A Vim plugin that allows you create directories and files at the same time!</p></a></nav></div><div class='footer-group'><a href='/hire-us'><h3 class='footer-group__title'>CONTACT</h3></a><p class='footer-desc'>DockYard HQ is located in Boston. Stop in sometime and meet our team!</p><a class='footer-address has-border--top' href='https://www.google.com/maps/preview#!q=DockYard%2C+Tremont+Street+%23200%2C+Boston%2C+MA&amp;data=!4m15!2m14!1m13!1s0x89e37083512ceab3%3A0x1e657c639844318d!3m8!1m3!1d197180!2d-70.970284!3d42.31435!3m2!1i400!2i802!4f13.1!4m2!3d42.357236!4d-71.061077' target='_blank'><p class='footer-desc'>DockYard Inc.</p><p class='footer-desc'>101 Tremont Street</p><p class='footer-desc'>Suite 200</p><p class='footer-desc'>Boston, MA 02108</p></a><a class="text-link" href="http://dockyard.com/hire-us">Get in touch.</a><div class='footer-social has-border--top'><a class='social-nav-item' data-icon='#' href='https://twitter.com/dockyard' target='_blank'><span class='is-hidden'>Twitter</span></a><a class='social-nav-item' data-icon='★' href='https://github.com/dockyard' target='_blank'><span class='is-hidden'>GitHub</span></a><a class='social-nav-item' data-icon='✒' href='http://reefpoints.dockyard.com/atom.xml' target='_blank'><span class='is-hidden'>RSS</span></a></div></div></div></footer><audio class='foghorn' preload='auto' src='/sound/foghorn.mp3'></audio><script>
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'reefpoints'; // required: replace example with your forum shortname
  
  /* * * DON'T EDIT BELOW THIS LINE * * */
  (function () {
      var s = document.createElement('script'); s.async = true;
      s.type = 'text/javascript';
      s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
      (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
</script></body></html>