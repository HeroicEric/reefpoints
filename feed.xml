<!DOCTYPE html><html><head><title>DockYard</title><link href="/stylesheets/all-cd0e0fe1.css" media="screen" rel="stylesheet" type="text/css" /><script src="/javascripts/all-ce68a29a.js" type="text/javascript"></script><meta content='NO-CACHE' http-equiv='CACHE-CONTROL'><meta content='DockYard is a Ruby on Rails, PostgreSQL, and, Ember.js, web / mobile application development software consultancy based in Boston, MA.' namer='description'><meta content='ruby on rails, rails, ruby, ruby on rails training, ruby application development, ruby on rails application development, ember application development, ember.js application development, software application development, web, web application development, mobile, mobile application development, ios, ios application development, iphone, iphone application development, android, android application development, postgres, startups, enterprise, Boston, MA, Massachusetts, for hire' name='keywords'><meta content='web development, mobile development, startups, enterprise, ruby on rails, rails, ruby, ruby on rails training, Boston, for hire' name='keywords'><meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0' name='viewport'><meta charset='utf-8'><meta content='DockYard.com - ' name='description'><link href='//cloud.typography.com/6496052/702882/css/fonts.css' rel='stylesheet' type='text/css'><link href='http://dockyard.com/humans.txt' rel='author'><link href='/favicon.png' rel='shortcut icon' type='image/x-icon'><link href='/favicon.png' rel='icon' type='image/x-icon'><link href='/apple-touch-icon.png' rel='apple-touch-icon'><link href='/apple-touch-icon-precomposed.png' rel='apple-touch-icon-precomposed'><script>
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-24185112-2']);
    _gaq.push(['_trackPageview']);
  
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>
<!--
                                             ..
                                           .O.
                                       .:OO.
                                      :OOO.
                                    :OOO:.
                         ...      :OOOO:
                   ..ZOOOOOOOOO..OZ.O.
                   OOOOOOOOOOOOOOOOI
                  OOOOOOOOOOOOOOOOI,
                 OOOOOOOO. .OOOOOOOO:
                 OOOOOOOO   OOOOOOOOO:
                OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO
                OOOOOO?:   .OOOOOOOOO
               .OOOOO      OOOOOOOOOO
,OO ZO,        OOOOO,     OOOOOOOOOO+
 OOOOO.        OOOOO     OOOOOOOOOOO+
  OOO?        OOOOO     .OOOOOOOOOOO:
   OOO,      OOOOO.    .OOOOOOOOOOOO
    OOOOOOOOOOOOO.    .OOOOOOOOOOOO.
     OOOOOOOOOOOO.  .OOOOOOOOOOOOO.
      8OOOOOOOOOOOOOOOOOOOOOOOODO:
         :OOOOOOOOOOOOOOOOOOOO::

--></head><body class='feed'><header><div class='extended-nav-wrap'><div class='l-wrap--wide'><nav class='extended-nav'><a class="extended-nav--logo" data-icon="⌂" href="http://dockyard.com/"><span class='is-hidden'>Home</span></a>
<a class="extended-nav--close" data-icon="X" href="#"><span class='is-hidden'>Close</span></a><div class='extended-nav__items'><div class='extended-nav__items--mobile'><a class="extended-nav__item--work extended-nav__item" href="#">Work</a><nav class='work-nav--mobile'><a href="http://dockyard.com/work/credit-card-reviews" class="work-nav-item"><strong class='work-nav-item__title'>Credit Card Reviews</strong></a>
<a href="http://dockyard.com/work/coachup" class="work-nav-item"><strong class='work-nav-item__title'>CoachUp</strong></a>
<a href="http://dockyard.com/work/askthem" class="work-nav-item"><strong class='work-nav-item__title'>AskThem</strong></a>
<a href="http://dockyard.com/work/beacon-hill-blitz" class="work-nav-item"><strong class='work-nav-item__title'>Beacon Hill Blitz</strong></a></nav></div><a class="extended-nav__item" href="http://dockyard.com/team">Our Team</a><a class="extended-nav__item" href="http://dockyard.com/process">Process</a><a class="extended-nav__item" href="http://dockyard.com/community">Community</a><a class="extended-nav__item active" href="/">Blog</a><a class="extended-nav__item" href="http://dockyard.com/hire-us">Hire Us</a></div></nav><nav class='work-nav'><h6>Selected Work</h6><a href="http://dockyard.com/work/credit-card-reviews" class="work-nav-item"><strong class='work-nav-item__title'>Credit Card Reviews</strong><p>Credit card advice from real people.</p></a>
<a href="http://dockyard.com/work/coachup" class="work-nav-item"><strong class='work-nav-item__title'>CoachUp</strong><p>You should be training. Right now.</p></a>
<a href="http://dockyard.com/work/askthem" class="work-nav-item"><strong class='work-nav-item__title'>AskThem</strong><p>Ask officials questions on city, state, and federal levels.</p></a>
<a href="http://dockyard.com/work/beacon-hill-blitz" class="work-nav-item"><strong class='work-nav-item__title'>Beacon Hill Blitz</strong><p>How technology helped repeal the #TechTax.</p></a></nav></div></div><nav class='main-nav-wrap'><div class='main-nav l-wrap--wide'><a class="logo" href="http://dockyard.com">DockYard</a><a class="club-sandwich" data-icon="☰" href="#"><span class='is-hidden'>Navigation</span></a></div></nav></header><div class='push--header'></div><div class='l-wrap--blog'><a href="/"><strong class='logo--blog'>ReefPoints</strong><strong class='logo--blog__tagline'>Blog</strong></a><nav class='blog-nav'><a class="blog-nav__item " href="/">Posts</a><a class="blog-nav__item " href="/categories.html">Categories</a><a class="blog-nav__item " href="/authors.html">Authors</a></nav></div><?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-03-03T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Using Database Templates in Rails</title>
    <link rel="alternate" href="/2014/03/03/using-database-templates.html"/>
    <id>/2014/03/03/using-database-templates.html</id>
    <published>2014-03-03T00:00:00Z</published>
    <updated>2014-03-03T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Using Postgres as your application&amp;#39;s database? If so, there is a handy
configuration option that you may not be aware about. The &lt;code&gt;pg&lt;/code&gt; gem provides a &lt;code&gt;template&lt;/code&gt; option that
allows for copying already existing data into an application as
long as you have matching schema. &lt;/p&gt;

&lt;p&gt;To add this functionality, simply add the &lt;code&gt;template&lt;/code&gt; option inside &lt;code&gt;config/database.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight yaml "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="key"&gt;development&lt;/span&gt;:
  &lt;span class="key"&gt;adapter&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="content"&gt;postgresql&lt;/span&gt;&lt;/span&gt;
  &lt;span class="key"&gt;encoding&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="content"&gt;unicode&lt;/span&gt;&lt;/span&gt;
  &lt;span class="key"&gt;database&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="content"&gt;myapp_development&lt;/span&gt;&lt;/span&gt;
  &lt;span class="key"&gt;template&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="content"&gt;my_template&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;#39;s go through a quick example. Suppose we have an existing database, &lt;code&gt;food&lt;/code&gt;, and it contains an abundant amount of data with the
following schema:&lt;/p&gt;
&lt;div class="highlight  "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;foods: name (string), category_id (integer)
categories: category (string)
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To use the &lt;code&gt;food&lt;/code&gt; database for our application, we are going to
create a template by specifying our database with the following command: &lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;createdb -T food my_food_template
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We must now set up our Rails application and make sure that our schema matches
that of our new template. Our Rails models will mimick &lt;code&gt;food&lt;/code&gt;. Having done
that, we can now modify our &lt;code&gt;config/database.yml&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight yaml "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="key"&gt;database&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="content"&gt;myapp_development&lt;/span&gt;&lt;/span&gt;
&lt;span class="key"&gt;template&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="content"&gt;my_food_template&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Run migrations and voilà! Our database has been populated and is ready to be used.&lt;/p&gt;
&lt;div class="highlight bash "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&amp;gt; psql myapp_development

&amp;gt; select * from foods;
  id |  name  | category_id
  --------------------------
  1   apple       1
  2   banana      1
  3   spinach     2
  4   ice cream   3

&amp;gt; select * from categories;
  id |  category
  --------------
  1   fruit
  2   vegetable
  3   other
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>A Simple Ember Data Route</title>
    <link rel="alternate" href="/2014/03/03/a-simple-ember-data-route.html"/>
    <id>/2014/03/03/a-simple-ember-data-route.html</id>
    <published>2014-03-03T00:00:00Z</published>
    <updated>2014-03-03T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;When working with an Ember Data model it is easy to forget to properly
handle the teardown of that model. For example, if you are creating a
new model and the user hits the backbutton that model is still in the
local &lt;code&gt;store&lt;/code&gt;. Or if a user edits a model and decides to click the
&lt;code&gt;Cancel&lt;/code&gt; button or clicks a link that transitions out of this route
without saving the model. A basic approach can be as simple as:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;Ember.DSModelRoute = Ember.Route.extend({
  &lt;span class="function"&gt;deactivate&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;() {
    &lt;span class="keyword"&gt;var&lt;/span&gt; model = &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;controller.model&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
    model.rollback();
    &lt;span class="keyword"&gt;if&lt;/span&gt; (model.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;isNew&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)) {
      model.deleteRecord();
    }
  },
  &lt;span class="key"&gt;actions&lt;/span&gt;: {
    &lt;span class="function"&gt;willTransition&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(transition) {
      &lt;span class="keyword"&gt;var&lt;/span&gt; model = &lt;span class="local-variable"&gt;this&lt;/span&gt;.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;controller.model&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
      &lt;span class="keyword"&gt;if&lt;/span&gt; (model.get(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;isDirty&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;) &amp;amp;&amp;amp; !confirm(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;You have unsaved changes. They will be lost if you continue!&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;)) {
        transition.abort();
      }
    }
  }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Routes inherited from &lt;code&gt;Ember.DSModelRoute&lt;/code&gt; will always clean up after themselves. If the user has unsaved changes and attempts to leave the current route 
the app will guard against the transition and allow the user to confirm with a notice that changes will be lost.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Native App Developers: We Can Help You</title>
    <link rel="alternate" href="/2014/02/07/native-app-developers-we-can-help-you.html"/>
    <id>/2014/02/07/native-app-developers-we-can-help-you.html</id>
    <published>2014-02-07T00:00:00Z</published>
    <updated>2014-02-07T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;If you have an existing app, and are looking for a server component,
whether it be adding a syncing service to your app, building out a web
version to extend your user experience, or need a site to showcase your
app, we have both the design and development resources to make that
happen.&lt;/p&gt;

&lt;p&gt;You might have realized that iCloud doesn&amp;#39;t fit your needs, or you want
a web application that interacts with your app. We can build your API to
fit your exact needs, so you don&amp;#39;t need to fight iCloud to fit your
needs. You may be looking to build out a new RSS service that needs to
parse and cache RSS feeds. We have the experience and resources that
will help you bring a server heavy component to your app.&lt;/p&gt;

&lt;p&gt;You may have users looking to use your application when they aren&amp;#39;t on
their phone. We can design and build a rich web application that brings your
app to the browser without losing the spirit of your app. You might need
a marketing site with video demos and screenshots of your app. We can
design and build a site that really shows off your application.&lt;/p&gt;

&lt;p&gt;If any of these sound like you, you should &lt;a href="http://dockyard.com/hire-us"&gt;get in touch with
us&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Announcing PostgresExt-PostGIS</title>
    <link rel="alternate" href="/2014/02/07/announcing-postgres_ext-postgis.html"/>
    <id>/2014/02/07/announcing-postgres_ext-postgis.html</id>
    <published>2014-02-07T00:00:00Z</published>
    <updated>2014-02-07T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Today I released the first version of
&lt;a href="https://github.com/dockyard/postgres_ext-postgis"&gt;postgres_ext-postgis&lt;/a&gt;, which
extends ActiveRecord to support PostGIS data types and some querying.
This is definitely a beta release, but ready to the point where people
can play around with it.&lt;/p&gt;

&lt;h2&gt;Migrations&lt;/h2&gt;

&lt;p&gt;With postgres_ext-postgis, you can easily add geometry columns:&lt;/p&gt;
&lt;div class="highlight ruby "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;create_table &lt;span class="symbol"&gt;:districts&lt;/span&gt; &lt;span class="keyword"&gt;do&lt;/span&gt; |t|
  t.geometry &lt;span class="symbol"&gt;:district_boundries&lt;/span&gt;
&lt;span class="keyword"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you&amp;#39;d like to include your projection or geometry type, just include
them as options to your column:&lt;/p&gt;
&lt;div class="highlight ruby "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;create_table &lt;span class="symbol"&gt;:districts&lt;/span&gt; &lt;span class="keyword"&gt;do&lt;/span&gt; |t|
  t.geometry &lt;span class="symbol"&gt;:district_boundries&lt;/span&gt;, &lt;span class="key"&gt;spatial_type&lt;/span&gt;: &lt;span class="symbol"&gt;:multipolygon&lt;/span&gt;, &lt;span class="key"&gt;srid&lt;/span&gt;: &lt;span class="integer"&gt;4326&lt;/span&gt;
&lt;span class="keyword"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Type Casting&lt;/h2&gt;

&lt;p&gt;Your geometry columns will be typecasted into
&lt;a href="http://dazuma.github.io/rgeo/"&gt;RGeo&lt;/a&gt; objects. You can set your
attributes with RGeo objects or EWKT/EWKB strings. EWKT/EWKB strings
will be converted to RGeo objects:&lt;/p&gt;
&lt;div class="highlight ruby "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;user.location = &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;SRID=4623;POINT(1 1)&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Querying&lt;/h2&gt;

&lt;p&gt;For now, the only added querying method for ActiveRecord is &lt;code&gt;contains&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight ruby "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="constant"&gt;District&lt;/span&gt;.where.contains(&lt;span class="key"&gt;district_boundries&lt;/span&gt;: user.location)
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above query will utilize PostGIS&amp;#39;s &lt;code&gt;ST_CONTAINS&lt;/code&gt; to see if the
&lt;code&gt;district_boundries&lt;/code&gt; column contains the &lt;code&gt;user.location&lt;/code&gt;. I plan to add
a convience method to convert EWKT strings to RGeo object, something
like &lt;code&gt;PostgreExt.geom(&amp;#39;SRID=4623;POINT(1 1)&amp;#39;)&lt;/code&gt;, to make generating
queries from, say, a mobile user&amp;#39;s current location a bit easier.&lt;/p&gt;

&lt;p&gt;As I get feedback and use postgres_ext-postgis, more features will get
added. Stay tuned!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember Conf: Ember for Rails Devs</title>
    <link rel="alternate" href="/2014/02/04/ember-conf-ember-for-rails-devs.html"/>
    <id>/2014/02/04/ember-conf-ember-for-rails-devs.html</id>
    <published>2014-02-04T00:00:00Z</published>
    <updated>2014-02-04T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://emberconf.com/"&gt;&lt;img src="http://emberconf.com/images/header.png" alt="EmberConf"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We invite you to learn from DockYard for a day before &lt;a href="http://emberconf.com"&gt;Ember Conf&lt;/a&gt; in Portland, Oregon. We will be offering a one day training session for Ruby on Rails developers interested in
learning how to build Ember Applications. Over the course of the day we
will teach you the following:&lt;/p&gt;

&lt;h4&gt;Introduction to Higher Level JavaScript Concepts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;ES6 Modules&lt;/li&gt;
&lt;li&gt;Promises&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Introduction to Ember Concepts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Client side MVC&lt;/li&gt;
&lt;li&gt;Ember.Object&lt;/li&gt;
&lt;li&gt;All the stuff under the hood of Router, Routes, Models, Controllers,
Components, Templates, and the Runloop&lt;/li&gt;
&lt;li&gt;Ember Data&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Introduction to Ember Appkit Rails&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;How to build a new Ember project with Rails&lt;/li&gt;
&lt;li&gt;Generators&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Together we wil build two applications before the day is over. The first
will be a simple CRUD &amp;quot;blog&amp;quot; style application. Time permitting the second will be 
a more advanced desktop-quality style applicaiton.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://emberconf.com/"&gt;Seats are limited, be sure to get your ticket before they sell
out!&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;About The Instructors&lt;/h2&gt;

&lt;h4&gt;Brian Cardarella&lt;/h4&gt;

&lt;p&gt;Brian is the CEO of DockYard and has been developing in Ember since late
2012. He was a &lt;a href="https://www.youtube.com/watch?v=wmQovdFoMm0"&gt;speaker at the &amp;quot;first&amp;quot; Ember conference, Ember Camp, in
      2013&lt;/a&gt;.
      Brian is the author of some popular Ember libraries such as
&lt;a href="https://github.com/dockyard/ember-validations"&gt;ember-validations&lt;/a&gt; and &lt;a href="https://github.com/dockyard/ember-easyForm"&gt;ember-easyForm&lt;/a&gt;. Recently he has been focusing most
of his open source time on building &lt;a href="https://github.com/dockyard/ember-appkit-rails"&gt;Ember Appkit
Rails&lt;/a&gt;, which is a
re-implementation of &lt;a href="https://github.com/stefanpenner/ember-app-kit"&gt;Ember App
Kit&lt;/a&gt; for the Rails Asset Pipeline.&lt;/p&gt;

&lt;h4&gt;Robert Jackson&lt;/h4&gt;

&lt;p&gt;Robert is a Sr. Developer at DockYard. He is a member of the Ember Release Management Team and a significant contributor to Ember. He spends much of his free time helping maintain a number of Ember related open-source projects including: &lt;a href="https://github.com/emberjs/data"&gt;Ember Data&lt;/a&gt;, &lt;a href="https://github.com/dockyard/ember-appkit-rails"&gt;Ember Appkit Rails&lt;/a&gt;, &lt;a href="https://github.com/stefanpenner/ember-app-kit"&gt;Ember App Kit&lt;/a&gt;, the &lt;a href="https://github.com/stefanpenner/ember-jj-abrams-resolver"&gt;EAK/EAKR resolver&lt;/a&gt;, &lt;a href="https://github.com/emberjs/ember-rails"&gt;ember-rails&lt;/a&gt;, &lt;a href="https://github.com/dockyard/ember-easyForm"&gt;ember-easyForm&lt;/a&gt;, and &lt;a href="https://github.com/dockyard/ember-validations"&gt;ember-validations&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Romina Vargas is a DockYarder!</title>
    <link rel="alternate" href="/2014/01/02/romina-vargas-is-a-dockyarder.html"/>
    <id>/2014/01/02/romina-vargas-is-a-dockyarder.html</id>
    <published>2014-01-02T00:00:00Z</published>
    <updated>2014-01-02T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/rvargas.jpg" alt="Romina Vargas"&gt;&lt;/p&gt;

&lt;p&gt;Romina was a DockYard intern that we just recently hired to full-time!
Over the past few months Romina has taken on all of the challenges we&amp;#39;ve
thrown at her and excelled. Now she&amp;#39;s TDD&amp;#39;ing, Vim&amp;#39;ing, Tmux&amp;#39;ing,
Ember&amp;#39;ing with the best of them. She&amp;#39;s also the co-author of the
exciting new Ember application that is all the buzz: &lt;a href="http://pizza-time.herokuapp.com"&gt;Pizza
Time&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rsocci"&gt;Follow Romina on GitHub&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
<div class='push--footer'></div><footer><div class='l-wrap'><div class='l-footer-group'><h3 class='footer-group__title'>EVENTS</h3><a class="footer__event--wgr" target="_blank" href="http://wickedgoodruby.com/">Wicked Good Ruby Conf</a><a class="footer__event--ember" target="_blank" href="http://www.meetup.com/Boston-Ember-js/">Boston Ember.js Meetup</a><a class="footer__event--ux" target="_blank" href="http://www.meetup.com/uxboston/">UX Boston Meetup</a><a class="footer__event--openhack" target="_blank" href="http://openhack.github.io/boston/">OpenHack Boston</a></div><div class='l-footer-group'><a href="/"><h3 class='footer-group__title'>BLOG</h3></a>
<a class="footer__post" href="/2014/03/03/using-database-templates.html"><strong>Using Database Templates in Rails</strong><h6 class='footer-desc'>Discover a helpful Postgres config option</h6></a>
<a class="footer__post" href="/2014/03/03/a-simple-ember-data-route.html"><strong>A Simple Ember Data Route</strong><h6 class='footer-desc'>A basic pattern for routes with Ember Data content</h6></a>
<a class="footer__post" href="/2014/02/07/native-app-developers-we-can-help-you.html"><strong>Native App Developers: We Can Help You</strong><h6 class='footer-desc'>Have an existing application? We can help you out!</h6></a></div><div class='l-footer-group'><a href="http://dockyard.com/hire-us"><h3 class='footer-group__title'>CONTACT</h3></a><h6 class='footer-desc'>DockYard HQ is located in Boston. Stop in sometime and meet our team!</h6><a class="footer__address" target="_blank" href="http://goo.gl/maps/zBGfn"><h6>DockYard Inc.<br>101 Tremont Street<br>Suite 200<br>Boston, MA 02108</h6></a>
<a class="text-link" href="http://dockyard.com/hire-us">Get in touch.</a><div class='social-links--footer'><a target="_blank" data-icon="#" class="social-link" href="https://twitter.com/dockyard"><span class='is-hidden'>Twitter</span></a>
<a target="_blank" data-icon="★" class="social-link" href="https://github.com/dockyard"><span class='is-hidden'>GitHub</span></a>
<a target="_blank" data-icon="✒" class="social-link" href="http://reefpoints.dockyard.com/atom.xml"><span class='is-hidden'>RSS</span></a></div></div></div></footer><script>
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'reefpoints'; // required: replace example with your forum shortname
  
  /* * * DON'T EDIT BELOW THIS LINE * * */
  (function () {
      var s = document.createElement('script'); s.async = true;
      s.type = 'text/javascript';
      s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
      (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
</script></body></html>